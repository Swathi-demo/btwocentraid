{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive - Paramount Computer Systems\\\\Desktop\\\\B2CsamplewithRABC\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client'; // Use react-dom/client instead of react-dom\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { MsalProvider } from '@azure/msal-react';\nimport { PublicClientApplication } from '@azure/msal-browser';\nimport { msalConfigB2C, msalConfigEntraID } from './authConfig';\n\n// Toggle between B2C and Entra ID configurations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authType = process.env.REACT_APP_AUTH_TYPE || 'b2c'; // Set 'b2c' or 'entra' in .env\nconst msalConfig = authType === 'b2c' ? msalConfigB2C : msalConfigEntraID;\nconst msalInstance = new PublicClientApplication(msalConfig);\nconst root = ReactDOM.createRoot(document.getElementById('root')); // Use createRoot\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(MsalProvider, {\n    instance: msalInstance,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","BrowserRouter","MsalProvider","PublicClientApplication","msalConfigB2C","msalConfigEntraID","jsxDEV","_jsxDEV","authType","process","env","REACT_APP_AUTH_TYPE","msalConfig","msalInstance","root","createRoot","document","getElementById","render","StrictMode","children","instance","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Admin/OneDrive - Paramount Computer Systems/Desktop/B2CsamplewithRABC/frontend/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client'; // Use react-dom/client instead of react-dom\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { MsalProvider } from '@azure/msal-react';\r\nimport { PublicClientApplication } from '@azure/msal-browser';\r\nimport { msalConfigB2C, msalConfigEntraID } from './authConfig';\r\n\r\n// Toggle between B2C and Entra ID configurations\r\nconst authType = process.env.REACT_APP_AUTH_TYPE || 'b2c'; // Set 'b2c' or 'entra' in .env\r\nconst msalConfig = authType === 'b2c' ? msalConfigB2C : msalConfigEntraID;\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root')); // Use createRoot\r\nroot.render(\r\n  <React.StrictMode>\r\n    <MsalProvider instance={msalInstance}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </MsalProvider>\r\n  </React.StrictMode>\r\n);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB,CAAC,CAAC;AACzC,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,uBAAuB,QAAQ,qBAAqB;AAC7D,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,cAAc;;AAE/D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,IAAI,KAAK,CAAC,CAAC;AAC3D,MAAMC,UAAU,GAAGJ,QAAQ,KAAK,KAAK,GAAGJ,aAAa,GAAGC,iBAAiB;AAEzE,MAAMQ,YAAY,GAAG,IAAIV,uBAAuB,CAACS,UAAU,CAAC;AAE5D,MAAME,IAAI,GAAGf,QAAQ,CAACgB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACnEH,IAAI,CAACI,MAAM,cACTX,OAAA,CAACT,KAAK,CAACqB,UAAU;EAAAC,QAAA,eACfb,OAAA,CAACL,YAAY;IAACmB,QAAQ,EAAER,YAAa;IAAAO,QAAA,eACnCb,OAAA,CAACN,aAAa;MAAAmB,QAAA,eACZb,OAAA,CAACP,GAAG;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}